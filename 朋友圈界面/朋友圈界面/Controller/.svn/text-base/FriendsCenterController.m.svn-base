//
//  FriendsCenterController.m
//  朋友圈
//
//  Created by 冷武橘 on 2017/5/27.
//  Copyright © 2017年 冷武橘. All rights reserved.
//

#import "FriendsCenterController.h"
#import "FriendCenterCell.h"
#import "CircleHeadview.h"
#import "Saytextview.h"
#import "Messagecenter.h"
#import "FriendsCenter.h"
#import "UITextView+YZEmotion.h"
#import "YYText.h"
#import "HLTTableview.h"
#import "PublishController.h"
typedef NS_ENUM(NSInteger,Messagetype) {
    Commentmessage = 0,//评论
    Answermessage  = 1//回复
    };

@interface FriendsCenterController ()<UITableViewDelegate,UITableViewDataSource,AngswerDelegate,YYTextViewDelegate>{
    HLTTableview* _tableview;
    UITextField *mytextfiled;
    NSString *accout;
    NSMutableAttributedString *mutablestring;
    CGFloat  maxTextH;//textview最大高度
    CGSize maxSize ;//textview最大宽度
    NSString *answername;
}
@property(nonatomic,strong)YYTextView *commenttextfiled;
@property(nonatomic,strong)UIView *commentview;
@property(nonatomic,strong)UIButton *sendbutton;
@property(nonatomic,strong)NSMutableArray *DataArray;
@property(nonatomic,strong)UITableViewCell *seleccell;
@property(nonatomic,assign)Messagetype messagetype;
@property (strong, nonatomic) YZEmotionKeyboard *emotionKeyboard;
@property (strong, nonatomic) UIButton *keyboardbutton;
@property (nonatomic, assign) CGFloat history_Y_offset;//记录table的offset.y
@property (nonatomic, assign) CGFloat seletedCellHeight;//记录点击cell的高度，高度由代理传过来
@property (nonatomic, assign) BOOL needUpdateOffset;//控制是否刷新table的offset
/**
 *  文字高度
 */
@property (nonatomic, assign) NSInteger textH;
@end

@implementation FriendsCenterController
// 懒加载键盘
- (YZEmotionKeyboard *)emotionKeyboard
{
    // 创建表情键盘
    if (_emotionKeyboard == nil) {
        YZEmotionKeyboard *emotionKeyboard = [YZEmotionKeyboard emotionKeyboard];
        emotionKeyboard.sendContent = ^(NSString *content){
            // 点击发送会调用，自动把文本框内容返回给你
        };
        _emotionKeyboard = emotionKeyboard;
    }
    return _emotionKeyboard;
}
- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    //写入这个方法后,这个页面将没有这种效果
    [IQKeyboardManager sharedManager].enable = NO;
}
- (void)viewWillDisappear:(BOOL)animated{
    [super viewWillDisappear:animated];
    //最后还设置回来,不要影响其他页面的效果
    [IQKeyboardManager sharedManager].enable = YES;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.title=@"圈子";
     accout=@"冷武橘";
    [self SetupTableview];
    [self SetupToolfiled];
    _DataArray=[NSMutableArray array];
    _images=[NSMutableArray array];
    NSArray *arr=@[@"刘成成",@"韩李涛",@"张衡"];
    NSArray *arr1=@[@"咦嘘兮，危乎高哉，蜀道之难，难于上青天",@"不知天上宫阙，今昔是何年",@"王国维谈治学三境界说：“古今之成大事业、大学问者,必经过三种之境界：‘昨夜西风凋碧树.独上高楼,望尽天涯路’.此第一境也.‘衣带渐宽终不悔,为伊消得人憔悴.’此第二境也.‘众里寻他千百度,蓦然回首,那人却在,灯火阑珊处’.此第三境也"];

    for (int i=0; i<3; i++) {
        FriendsCenter *friends=[FriendsCenter namewithname:arr[i] time:@"昨天" says:arr1[i]];
        if (i==0) {
            UIImage *image=[UIImage imageNamed:@"0.jpg"];
            UIImage *image1=[UIImage imageNamed:@"1.jpg"];
            UIImage *image2=[UIImage imageNamed:@"2.jpg"];
            UIImage *image3=[UIImage imageNamed:@"1.jpg"];
            [self.images addObject:image];
            [self.images addObject:image1];
            [self.images addObject:image2];
            [self.images addObject:image3];
            [self.images addObject:image1];
            [self.images addObject:image2];
            friends.grouparray=[NSMutableArray array];
            friends.imagearray=self.images;
            Messagecenter *message=[[Messagecenter alloc]init];
         
            message.messagename=@"周旋";
            message.messagetext=[self attributetext:@"周旋:有道理"   messagename:message.messagename];
 
            Messagecenter *message1=[[Messagecenter alloc]init];
            message1.messagename=@"吕启峰";
            message1.messagetext=[self attributetext:@"吕启峰:说的好"  messagename:message1.messagename];
     
            Messagecenter *message2=[[Messagecenter alloc]init];
                 message2.messagename=@"冯辉林";
             message2.messagetext=[self attributetext:@"冯辉林:非常好"  messagename:message2.messagename];
       
            Messagecenter *message3=[[Messagecenter alloc]init];
             message3.messagename=@"韩李涛";
            message3.messagetext=[self attributetext:@"韩李涛:古今之成大事业、大学问者界‘昨夜西风凋碧树.独上高楼,望尽天涯路"  messagename:message3.messagename];
           
            [friends.grouparray addObject:message];
            [friends.grouparray addObject:message3];
            [friends.grouparray addObject:message2];
            [friends.grouparray addObject:message1];
           
        }else{
             friends.grouparray=[NSMutableArray array];
        }
        [_DataArray addObject:friends];
    }
    UIButton *publishbutton=[[UIButton alloc]init];
    [self.view addSubview:publishbutton];
    publishbutton.backgroundColor=[UIColor  redColor];
    [publishbutton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(self.view).offset(-20);
        make.width.height.equalTo(@40);
        make.bottom.offset(-100);

    }];
    
    [publishbutton addTarget:self action:@selector(publish) forControlEvents:UIControlEventTouchUpInside];
    [publishbutton setTitle:@"发布" forState:UIControlStateNormal];
    
    
    
    
    
}
- (void)publish{
    PublishController *publishvc=[[PublishController alloc]init];
    [self.navigationController pushViewController:publishvc animated:YES];
}
#pragma mark -初始化Tableview
- (void)SetupTableview{
  _tableview=[[HLTTableview alloc]initWithFrame:CGRectMake(0, 0, ScreenFullWidth, ScreenFullHeight-64) style:UITableViewStylePlain];
    _tableview.showsVerticalScrollIndicator=NO;
    _tableview.dataSource=self;
    _tableview.delegate=self;
    [self.view addSubview:_tableview];
    UIView *headview=[[UIView alloc]initWithFrame:CGRectMake(0, 0, 0, 160)];
    headview.backgroundColor=[UIColor grayColor];
    CircleHeadview *circleview=[[CircleHeadview alloc]initWithFrame:CGRectMake(0, 0, ScreenFullWidth, 150)];
    circleview.backgroundColor=[UIColor whiteColor];
    [headview addSubview:circleview];
    _tableview.tableHeaderView=headview;
  
//    _tableview.estimatedRowHeight = 44;
}
#pragma mark -初始化工具条输入框
- (void)SetupToolfiled{
    // 监听键盘通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillChangeFrame:) name:UIKeyboardWillChangeFrameNotification object:nil];
    //注册键盘出现NSNotification
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillShow:)
                                                 name:UIKeyboardWillShowNotification object:nil];
    
    
    //注册键盘隐藏NSNotification
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillHide:)
                                                 name:UIKeyboardWillHideNotification object:nil];
    _commentview=[[UIView alloc]init];
    _commentview.backgroundColor=[UIColor lightGrayColor];
    [self.view addSubview: _commentview];
    [_commentview mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.view).offset(0);
        make.right.equalTo(self.view).offset(0);
        make.bottom.equalTo(self.view).offset(50);
    }];
    
    _sendbutton=[[UIButton alloc]init];
    _sendbutton.backgroundColor=[UIColor redColor];
    [_sendbutton setTitle:@"发送" forState:UIControlStateNormal];
    [_commentview addSubview:_sendbutton];
    [_sendbutton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.width.equalTo(@50);
        make.right.equalTo(_commentview.mas_right).offset(-10);
        make.top.equalTo(_commentview).offset(10);
        make.height.equalTo(@30);
    }];
    [_sendbutton addTarget:self action:@selector(send) forControlEvents:UIControlEventTouchUpInside];
    _keyboardbutton=[[UIButton alloc]init];
    [_keyboardbutton  addTarget:self action:@selector(change) forControlEvents:UIControlEventTouchUpInside];
    [_commentview addSubview:_keyboardbutton];
    [_keyboardbutton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(_sendbutton.mas_left).offset(-10);
        make.width.equalTo(@30);
        make.top.equalTo(_commentview).offset(10);
        make.height.equalTo(@30);
    }];
    [self.keyboardbutton setBackgroundImage:[UIImage imageNamed:@"smail"] forState:UIControlStateNormal];
    _commenttextfiled=[[YYTextView  alloc]init];
    _commenttextfiled.font=[UIFont systemFontOfSize:14];
    _commenttextfiled.delegate=self;
    _commenttextfiled.backgroundColor=[UIColor whiteColor];
    [_commentview addSubview: _commenttextfiled];
    [_commenttextfiled mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(_commentview).offset(10);
        make.right.equalTo(_keyboardbutton.mas_left).offset(-10);
        make.top.equalTo(_commentview).offset(10);
        make.height.equalTo(@30);
        make.bottom.equalTo(_commentview).offset(-10);
        
    }];
    [_commenttextfiled layoutIfNeeded];
    // 文字的最大尺寸
    maxSize = CGSizeMake(_commenttextfiled.frame.size.width, MAXFLOAT);
    // 计算最大高度 = (每行高度 * 总行数 + 文字上下间距)
    maxTextH = ceil(_commenttextfiled.font.lineHeight * 3 + _commenttextfiled.textContainerInset.top + _commenttextfiled.textContainerInset.bottom);

}
- (NSAttributedString *)attributetext:(NSString *)text  messagename:(NSString *)messagename

{
  NSMutableAttributedString *text1 = [[NSMutableAttributedString alloc] initWithString:text];
    [text1 yy_setTextHighlightRange:NSMakeRange(0, messagename.length)
                                      color:[UIColor blueColor]
                            backgroundColor:[UIColor grayColor]
                                  tapAction:^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect){
                                 
                                      
                                      
                                      
                                      
                                      
                                  }];
    

    [text1 setYy_font:[UIFont systemFontOfSize:14]];
    
    
    
    
    
    return text1;

}

#pragma mark -切换输入键盘和表情键盘
- (void)change{
    if (_commenttextfiled.inputView == nil) {
        _commenttextfiled.yz_emotionKeyboard = self.emotionKeyboard;
        [self.keyboardbutton setBackgroundImage:[UIImage imageNamed:@"toolbar-text"] forState:UIControlStateNormal];
    } else {
       _commenttextfiled.inputView = nil;
        [self.keyboardbutton setBackgroundImage:[UIImage imageNamed:@"smail"] forState:UIControlStateNormal];
        [_commenttextfiled reloadInputViews];
    }
    
}

#pragma mark-点击发送按钮，评论或回复。
- (void)send{
    [self.view endEditing:YES];
    [_commenttextfiled mas_updateConstraints:^(MASConstraintMaker *make) {
        make.height.mas_equalTo(@30);
    }];
  
    NSIndexPath *IndexPath =[_tableview indexPathForCell:_seleccell];
    FriendsCenter *friends=_DataArray[IndexPath.row];
    Messagecenter *message=[[Messagecenter alloc]init];
    if (self.messagetype==Commentmessage) {
        
        NSMutableAttributedString *commentstring=[[NSMutableAttributedString alloc] initWithString:@"冷武橘:"];
        [commentstring setYy_font:[UIFont systemFontOfSize:14]];

        [commentstring appendAttributedString:_commenttextfiled.attributedText];
        message.messagename=accout;
        
        [commentstring yy_setTextHighlightRange:NSMakeRange(0, message.messagename.length)
                                          color:[UIColor blueColor]
                                backgroundColor:[UIColor grayColor]
                                      tapAction:^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect){
                                 
                                          
                            
                                          
                                          
                                          
                                      }];
        message.messagetext=commentstring;
    
        [friends.grouparray addObject:message];
    }
    //如果是回复
    if (self.messagetype==Answermessage) {
        NSMutableAttributedString *commentstring=[[NSMutableAttributedString alloc] initWithString:@"冷武橘回复:"];
        NSString *accunt=@"冷武橘";
        [commentstring appendAttributedString:[[NSMutableAttributedString alloc] initWithString:answername]];
        [commentstring appendAttributedString:_commenttextfiled.attributedText];
        message.messagename=accunt;
        [commentstring yy_setTextHighlightRange:NSMakeRange(0, accunt.length)
                                          color:[UIColor blueColor]
                                backgroundColor:[UIColor grayColor]
                                      tapAction:^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect){
                                      
                                          
                                          
                                          
                                          
                                          
                                      }];
        [commentstring yy_setTextHighlightRange:NSMakeRange(accunt.length+3, answername.length)
                                          color:[UIColor blueColor]
                                backgroundColor:[UIColor grayColor]
                                      tapAction:^(UIView *containerView, NSAttributedString *text, NSRange range, CGRect rect){
                                 
                                          
        
                                      }];

        message.messagetext=commentstring;
      
        [friends.grouparray addObject:message];
    }

//
    [_tableview reloadData];
    _commenttextfiled.attributedText=nil;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{//设置每组里有多少行
    
    return _DataArray.count;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{

    
    FriendCenterCell* cell =[FriendCenterCell cellwithtableview:tableView];
    FriendsCenter *friends=self.DataArray[indexPath.row];
    cell.delegate=self;
    cell.frienscenter=friends;
    cell.array=friends.grouparray;
  
    [cell.commentBtn addTarget:self action:@selector(begincomment:) forControlEvents:UIControlEventTouchUpInside];

    return cell;//将设置好的cell返回
}
#pragma mark-开始评论
- (void)begincomment:(UIButton*)sender{
    self.needUpdateOffset = YES;
    self.history_Y_offset = [sender    convertRect:sender.bounds toView:KeyWindow].origin.y;
    
    _commenttextfiled.placeholderText=@"我也说一句";
    self.messagetype=Commentmessage;
    _seleccell=(UITableViewCell *)sender.superview.superview;
    [_commenttextfiled becomeFirstResponder];
    
    
}

- (void)textFieldDidEndEditing:(UITextField *)textField{
}
#pragma mark-开始回复
- (void)answer:(UITableView *)tableview indexPath:(NSIndexPath *)indexPath{
    //当前评论、回复的小cell
    UITableViewCell *cell=(UITableViewCell *)[tableview cellForRowAtIndexPath:indexPath];
    self.seletedCellHeight=cell.frame.size.height;
     self.needUpdateOffset = YES;
    self.history_Y_offset = [cell convertRect:cell.bounds toView:KeyWindow].origin.y;
    
     //当前说说被选中的大cell的indexPath
    NSIndexPath *selecIndexPath =[_tableview indexPathForCell:_seleccell];
    FriendsCenter *friends=_DataArray[selecIndexPath.row];
    Messagecenter *message=friends.grouparray[indexPath.row];
    //自己不能回复自己
    if ([message.messagename isEqualToString:@"冷武橘"]) {
        return;
    }
 
    _commenttextfiled.text=nil;
    [_commenttextfiled becomeFirstResponder];
    answername=message.messagename;
   _commenttextfiled.placeholderText=[NSString stringWithFormat:@"回复%@", message.messagename];
    self.messagetype=Answermessage;
}
- (void)textViewDidChange:(YYTextView *)textView{

    CGFloat textH = ceilf([textView sizeThatFits:maxSize].height);
    self.commenttextfiled.scrollEnabled=NO;
    if (_textH!=textH) {
        _textH=textH;
        // 最大高度，可以滚动
        self.commenttextfiled.scrollEnabled = textH > maxTextH && maxTextH > 0;
        if (self.commenttextfiled.scrollEnabled==NO&&textH>30) {
            [_commenttextfiled mas_updateConstraints:^(MASConstraintMaker *make) {
                make.height.mas_equalTo(textH);
            }];
        }
        
    }
 
}
- (void)keyboardWillShow:(NSNotification *)notification
{ NSDictionary *userInfo = [notification userInfo];
    NSValue* aValue = [userInfo objectForKey:UIKeyboardFrameEndUserInfoKey];
    __block  CGFloat keyboardHeight = [aValue CGRectValue].size.height;
    if (keyboardHeight==0) {
        //解决搜狗输入法三次调用此方法的bug、
        //        IOS8.0之后可以安装第三方键盘，如搜狗输入法之类的。
        //        获得的高度都为0.这是因为键盘弹出的方法:- (void)keyBoardWillShow:(NSNotification *)notification需要执行三次,你如果打印一下,你会发现键盘高度为:第一次:0;第二次:216:第三次:282.并不是获取不到高度,而是第三次才获取真正的高度.
        return;
    }
    CGRect keyboardRect = [aValue CGRectValue];
    keyboardRect = [self.view convertRect:keyboardRect fromView:nil];
    CGFloat keyboardTop = keyboardRect.origin.y;
    CGRect newTextViewFrame = self.view.bounds;
    newTextViewFrame.size.height = keyboardTop - self.view.bounds.origin.y;
    
    NSValue *animationDurationValue = [userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey];
    NSTimeInterval animationDuration;
    [animationDurationValue getValue:&animationDuration];
    CGFloat delta = 0.0;
    if (self.messagetype==Answermessage){//点击某行，进行回复某人
        delta = self.history_Y_offset - (KeyWindow.bounds.size.height - keyboardHeight-  self.seletedCellHeight-self.commentview.frame.size.height);
    }else{//点击评论按钮
      delta = self.history_Y_offset - (KeyWindow.bounds.size.height - keyboardHeight-  self.commentview.frame.size.height-30-2);//
    }
    
    CGPoint offset =  _tableview.contentOffset;
    offset.y += delta;
    if (offset.y < 0) {
        offset.y = 0;
    }
   
    if (self.needUpdateOffset) {
        [_tableview setContentOffset:offset animated:YES];
    }


    NSLog(@"123456789");
}

#pragma mark - 键盘处理
- (void)keyboardWillChangeFrame:(NSNotification *)note {
    // 取出键盘最终的frame
    CGRect rect = [note.userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];
    // 取出键盘弹出需要花费的时间
    double duration = [note.userInfo[UIKeyboardAnimationDurationUserInfoKey] doubleValue];
    if (rect.origin.y<667) {
        [_commentview mas_updateConstraints:^(MASConstraintMaker *make) {
            make.bottom.equalTo(self.view.mas_bottom).offset(-rect.size.height);
            
        }];
    }else if (rect.origin.y>=667){
        [_commentview mas_updateConstraints:^(MASConstraintMaker *make) {
            make.bottom.equalTo(self.view.mas_bottom).offset(250);
            
        }];
    }
    // 修改transform
    [UIView animateWithDuration:duration animations:^{
        [self.view layoutIfNeeded];
        
    }];
}
#pragma mark keyboardWillHide
- (void)keyboardWillHide:(NSNotification *)notification {

    self.needUpdateOffset = NO;
}
- (void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    FriendsCenter *center=self.DataArray[indexPath.row];
    
    
    return center.cellheight+10;

}



@end
